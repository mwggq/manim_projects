from manim import *

config.pixel_width = 1080
config.pixel_height = 1920
config.frame_rate = 60
config.disable_caching = True

class symmetric(Scene):
    def construct(self):
        
    
        title = Text("Types of Matrices", font="Bahnschrift").set_color_by_gradient(BLUE, PURPLE).scale(1.2)
        title.stroke_width = 1.4
        self.add(title)
        
        row = MathTex(r"R = \begin{bmatrix} 1 & 2 & 3 & 4 \end{bmatrix}").set_color_by_gradient(BLUE, PURPLE).scale(1.2)
        title_row = Text("Row Matrix", font="Bahnschrift").set_color_by_gradient(BLUE, PURPLE).scale(1.2).next_to(row, DOWN)
        row.set_stroke(width=2)
        self.add(row, title_row)
        
        col = MathTex(r"C = \begin{bmatrix} 1 \\ 2 \\ 3 \\ 4 \end{bmatrix}").set_color_by_gradient(BLUE, PURPLE).scale(1.2)
        col_row = Text("Column Matrix", font="Bahnschrift").set_color_by_gradient(BLUE, PURPLE).scale(1.2).next_to(col, DOWN)
        col.set_stroke(width=2)
        self.add(col, col_row)
        
        square = MathTex(
            r"S = \begin{bmatrix} "
            r"1 & 2 & 3 \\ "
            r"4 & 5 & 6 \\ "
            r"7 & 8 & 9 "
            r"\end{bmatrix}"
        ).set_color_by_gradient(BLUE, PURPLE)
        square_row = Text("Square Matrix", font="Bahnschrift").set_color_by_gradient(BLUE, PURPLE).scale(1.2)
        square.set_stroke(width=2)
        self.add(square, square_row)
        
        diagonal = MathTex(
            r"D = \begin{bmatrix} "
            r"2 & 0 & 0 \\ "
            r"0 & 3 & 0 \\ "
            r"0 & 0 & 4 "
            r"\end{bmatrix}"
        ).set_color_by_gradient(BLUE, PURPLE)
        diagonal_row = Text("Diagonal Matrix", font="Bahnschrift").set_color_by_gradient(BLUE, PURPLE).scale(1.2)
        diagonal.set_stroke(width=2)
        self.add(diagonal, diagonal_row)
        
        scalar = MathTex(
            r"S = \begin{bmatrix} "
            r"5 & 0 & 0 \\ "
            r"0 & 5 & 0 \\ "
            r"0 & 0 & 5 "
            r"\end{bmatrix}"
        ).set_color_by_gradient(BLUE, PURPLE)
        scalar_row = Text("Scalar Matrix", font="Bahnschrift").set_color_by_gradient(BLUE, PURPLE).scale(1.2)
        scalar.set_stroke(width=2)
        self.add(scalar, scalar_row)
        
        symmetric = MathTex(
            r"S = \begin{bmatrix} "
            r"1 & 7 & 3 \\ "
            r"7 & 4 & -5 \\ "
            r"3 & -5 & 6 "
            r"\end{bmatrix}"
        ).set_color_by_gradient(BLUE, PURPLE)
        symmetric_row = Text("Symmetric Matrix", font="Bahnschrift").set_color_by_gradient(BLUE, PURPLE).scale(1.2)
        symmetric.set_stroke(width=2)
        self.add(symmetric, symmetric_row)
        
